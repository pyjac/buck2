"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4853],{3905:(t,e,n)=>{n.r(e),n.d(e,{MDXContext:()=>s,MDXProvider:()=>x,mdx:()=>f,useMDXComponents:()=>u,withMDXComponents:()=>p});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(){return o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},o.apply(this,arguments)}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),p=function(t){return function(e){var n=u(e.components);return r.createElement(t,o({},e,{components:n}))}},u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},x=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},d="mdxType",b={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),p=u(n),x=a,d=p["".concat(i,".").concat(x)]||p[x]||b[x]||o;return n?r.createElement(d,c(c({ref:e},s),{},{components:n})):r.createElement(d,c({ref:e},s))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c[d]="string"==typeof t?t:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},69236:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={id:"bxl_actions_ctx"},i="bxl_actions_ctx type",c={unversionedId:"api/bxl/bxl_actions_ctx",id:"api/bxl/bxl_actions_ctx",title:"bxl_actions_ctx type",description:"The bxl action context for creating and running actions.",source:"@site/../docs/api/bxl/bxl_actions_ctx.generated.md",sourceDirName:"api/bxl",slug:"/api/bxl/bxl_actions_ctx",permalink:"/docs/api/bxl/bxl_actions_ctx",draft:!1,tags:[],version:"current",frontMatter:{id:"bxl_actions_ctx"},sidebar:"manualSidebar",previous:{title:"audit_ctx type",permalink:"/docs/api/bxl/audit_ctx"},next:{title:"bxl_build_result type",permalink:"/docs/api/bxl/bxl_build_result"}},l={},s=[{value:"bxl_actions_ctx.action_factory",id:"bxl_actions_ctxaction_factory",level:2}],p={toc:s};function u(t){let{components:e,...n}=t;return(0,a.mdx)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"bxl_actions_ctx-type"},(0,a.mdx)("inlineCode",{parentName:"h1"},"bxl_actions_ctx")," type"),(0,a.mdx)("p",null,"The bxl action context for creating and running actions."),(0,a.mdx)("h2",{id:"bxl_actions_ctxaction_factory"},"bxl","_","actions","_","ctx.action","_","factory"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'def bxl_actions_ctx.action_factory() -> ""\n')),(0,a.mdx)("p",null,"Returns the analysis registry ","[",(0,a.mdx)("inlineCode",{parentName:"p"},"AnalysisRegistry"),"]"," to create and register actions for this bxl function. This will have the same functionality as the actions for rules."),(0,a.mdx)("p",null,"Actions created by bxl will not be built by default. Instead, they are marked to be built\nby ",(0,a.mdx)("inlineCode",{parentName:"p"},"ctx.output.ensure(artifact)")," on the output module of the ","[",(0,a.mdx)("inlineCode",{parentName:"p"},"BxlContext"),"]",". Only artifacts\nmarked by ensure will be built."),(0,a.mdx)("p",null,"Sample usage:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-text"},'def _impl_write_action(ctx):\n    actions = ctx.actions_factory\n    output = actions.write("my_output", "my_content")\n    ensured = ctx.output.ensure(output)\n    ctx.output.print(ensured)\n')))}u.isMDXComponent=!0}}]);